POC Ansible + AWX

Realizar instalação e configuração do Ansible + AWX em Máquina Virtual.
Após testes de automação, apresentar a ferramenta em funcionamento.

https://www.admin-magazine.com/Archive/2018/46/AWX-Web-Based-Console-Manager-for-Ansible
https://docs.ansible.com/ansible-tower/2.2.2/html/installandreference/requirements_refguide.html
https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/1.2/html/installing_and_upgrading_private_automation_hub/system_requirements
https://tecadmin.net/install-ansible-on-debian-9-stretch/
https://tecadmin.net/install-python-3-8-ubuntu/
https://www.python.org/ftp/python/
https://docs.ansible.com/ansible/2.4/intro_configuration.html
https://serverfault.com/questions/244767/enable-iptables-on-one-interface
https://www.cyberciti.biz/tips/linux-iptables-4-block-all-incoming-traffic-but-allow-ssh.html
https://docs.ansible.com/ansible/latest/user_guide/playbooks_vars_facts.html
https://www.middlewareinventory.com/blog/ansible-facts-list-how-to-use-ansible-facts/
https://www.middlewareinventory.com/blog/ansible-playbook-example/
https://www.redhat.com/sysadmin/playing-ansible-facts
https://ansible-tips-and-tricks.readthedocs.io/en/latest/os-dependent-tasks/variables/
https://www.unixarena.com/2018/08/ansible-how-to-gather-facts-on-remote-server.html/
https://ansible-tips-and-tricks.readthedocs.io/en/latest/ansible/commands/
https://linuxhint.com/ansible_register_module/
https://computingforgeeks.com/how-to-install-ansible-awx-on-debian-buster/

- OPENSSL -
https://www.howtoforge.com/tutorial/how-to-install-openssl-from-source-on-linux/
https://askubuntu.com/questions/1126893/how-to-install-openssl-1-1-1-and-libssl-package

- ISSUE -
https://groups.google.com/g/awx-project/c/xpKe4nFJWoY
https://github.com/ansible/awx-operator/issues/839#issuecomment-1075098932
https://githubmemory.com/index.php/repo/kurokobo/awx-on-k3s/issues/22
https://github.com/ansible/awx-operator/issues/640
https://groups.google.com/g/awx-project
https://github.com/ansible/awx-operator/issues/839
https://youtu.be/p6EkmWm1Kz4 (Ingress test)

Viabilizar duas máquinas Virtuais Debian:

2x VMs => (AWX - 4vCPU, 4GB RAM) + (Debian - 2vCPU, 2GB RAM)

Obs: a segunda máquina será necessária para a validação e execução das playbooks.

vmdev07.vmdev.bk.sapo.pt
vmdev08.vmdev.bk.sapo.pt 

Debian 9.11
1- habilitar portas iptables
	instala nginx
	editar regras
		iptables -P INPUT DROP (default policy drop all input)
		iptables -F (flush)
		iptables -X (flush)
		iptables -A INPUT -i eth1 -p tcp --dport 80 -j ACCEPT
		iptables -A INPUT -i eth1 -j DROP
	testa telnet porta
		telnet 192.168.0.9 80
		telnet 192.168.0.9 22
	
		iptables -L -n -v

	allow 80,8080
	drop all
   
2- alterar yum para apt

Playbooks
Testar criação/remoção de usuario
Instalação/remoção de pacotes
Atualização determinado pacote
Limpeza de disco

################################################### INSTALAÇÃO ANSIBLE > DEBIAN 9.12

sudo -i
apt install -y libc6-dev git vim
apt install -y build-essential checkinstall
apt install -y libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev

wget -O /tmp/Python-3.9.13.tgz  https://www.python.org/ftp/python/3.9.13/Python-3.9.13.tgz
tar xzf /tmp/Python-3.9.13.tgz -C /usr/local/src/
cd /usr/local/src/Python-3.9.13/ && ./configure --enable-optimizations && make altinstall

pip3.9 install --upgrade pip && pip3.9 install --upgrade setuptools
pip3.9 install setuptools_rust wheel && pip3.9 install ansible
pip3.9 install ansible-tower-cli

mkdir -p /etc/ansible
chmod 644 /var/log/ansible.log>>!#:2
chmod 644 /etc/ansible/hosts>>!#:2

git clone https://github.com/fabiokerber/Ansible.git /tmp/git
sudo cp -R /tmp/git/Playbooks/install_awx /etc/ansible/
wget -O /etc/ansible/ansible.cfg https://raw.githubusercontent.com/fabiokerber/Ansible/main/Playbooks/install_awx/ansible.cfg

ansible-playbook /etc/ansible/install_awx/playbook.yml

###################################################

rm -rf /tmp/git && rm -rf /etc/ansible/install_awx && git clone https://github.com/fabiokerber/Ansible.git /tmp/git && sudo cp -R /tmp/git/Playbooks/install_awx /etc/ansible/

################################################### "PLAYBOOK" MANUAL

apt install -y make gcc perl-base libpcre3-dev zlib1g-dev ca-certificates curl
wget --no-check-certificate -O /tmp/openssl-1.1.1p.tar.gz https://ftp.openssl.org/source/openssl-1.1.1p.tar.gz
tar xzf /tmp/openssl-1.1.1p.tar.gz -C /usr/local/src/openssl-1.1.1p
cd /usr/local/src/openssl-1.1.1p
./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib
make
make install
echo "export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64" >> ~/.bashrc
curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
mkdir -p -m 755 {/usr/local/src/awx-operator,/usr/local/src/awx-on-k3s,/data/postgres,/data/projects}
chown 1000:0 /data/projects
git clone https://github.com/ansible/awx-operator.git /usr/local/src/awx-operator
git clone https://github.com/kurokobo/awx-on-k3s.git /usr/local/src/awx-on-k3s
export NAMESPACE=awx
AWX_HOST="vmdev08.vmdev.bk.sapo.pt"
cd /usr/local/src/awx-on-k3ss && openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -out ./base/tls.crt -keyout ./base/tls.key -subj "/CN=${AWX_HOST}/O=${AWX_HOST}" -addext subjectAltName="DNS:${AWX_HOST}"
sed -i 's|hostname: awx.example.com|hostname: vmdev08.vmdev.bk.sapo.pt"|g' /usr/local/src/awx-on-k3s/base/awx.yaml
cd /usr/local/src/awx-operator && git checkout 0.23.0 && make deploy
kubectl apply -k ~/awx-on-k3s/base

################################################### "PLAYBOOK" MANUAL (Novo SSL)

apt install -y make gcc perl-base libpcre3-dev zlib1g-dev ca-certificates curl build-essential checkinstall git

mkdir -p /opt/openssl/ssl
echo "export PATH=/opt/openssl/bin:${PATH}" >> ~/.bashrc
echo "export LD_LIBRARY_PATH=/opt/openssl/lib" >> ~/.bashrc
source ~/.bashrc
wget --no-check-certificate -O /tmp/openssl-1.1.1p.tar.gz https://ftp.openssl.org/source/openssl-1.1.1p.tar.gz
tar xzf /tmp/openssl-1.1.1p.tar.gz -C /usr/local/src/
cd /usr/local/src/openssl-1.1.1p
./config --prefix=/opt/openssl --openssldir=/opt/openssl/ssl --libdir=lib no-shared zlib-dynamic
make
make install
mv /usr/bin/c_rehash /usr/bin/c_rehash.old && mv /usr/bin/openssl /usr/bin/openssl.old

curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
mkdir -p -m 755 {/usr/local/src/awx-operator,/usr/local/src/awx-on-k3s,/data/postgres}
sudo mkdir -p /data/projects
chown 1000:0 /data/projects
git clone https://github.com/ansible/awx-operator.git /usr/local/src/awx-operator
git clone https://github.com/kurokobo/awx-on-k3s.git /usr/local/src/awx-on-k3s
export NAMESPACE=awx
export AWX_HOST=vmdev08.awx.lab
cd /usr/local/src/awx-on-k3s && openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -out ./base/tls.crt -keyout ./base/tls.key -subj "/CN=${AWX_HOST}/O=${AWX_HOST}" -addext "subjectAltName = DNS:${AWX_HOST}"
sed -i 's|hostname: awx.example.com|hostname: vmdev08.awx.lab|g' /usr/local/src/awx-on-k3s/base/awx.yaml
cd /usr/local/src/awx-operator && git checkout 0.23.0 && make deploy
kubectl apply -k /usr/local/src/awx-on-k3s/base

################################################### Comandos

kubectl get nodes -w
kubectl get services -n awx
watch kubectl get all -n awx
watch kubectl get pods -o wide -n awx
kubectl -n awx logs -f deployments/awx-operator-controller-manager -c awx-manager
watch -n1 kubectl -n awx get awx,all,ingress,secrets

kubectl get pods -n awx
kubectl get pods awx-operator-controller-manager-7594795b6b-qzjhn -n awx -o jsonpath='{.spec.containers[*].name}*'

kubectl describe pod/awx-operator-controller-manager-7594795b6b-qzjhn -n awx
kubectl describe pod/awx-76445c946f-kvtlx -n awx